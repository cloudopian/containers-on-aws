{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "MyVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "MyVPC",
                  {
                    "Fn::Select": [
                      "2",
                      {
                        "Fn::Split": [
                          "/",
                          { "Ref": "AWS::StackId" }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          }
        ]
      }
    },
    "Pub1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            { "Fn::GetAZs": "" }
          ]
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "VpcId": { "Ref": "MyVPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pub1"
          }
        ]
      }
    },
    "Pub2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            { "Fn::GetAZs": "" }
          ]
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": true,
        "VpcId": { "Ref": "MyVPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pub2"
          }
        ]
      }
    },
    "Pri1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            { "Fn::GetAZs": "" }
          ]
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": true,
        "VpcId": { "Ref": "MyVPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pri1"
          }
        ]
      }
    },
    "Pri2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            { "Fn::GetAZs": "" }
          ]
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": true,
        "VpcId": { "Ref": "MyVPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Pri2"
          }
        ]
      }
    },
    "PubRT": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "MyVPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PubRT"
          }
        ]
      }
    },
    "PriRT": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "MyVPC" },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PriRT"
          }
        ]
      }
    },
    "PubRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "MyVPCIG" },
        "RouteTableId": { "Ref": "PubRT" }
      }
    },
    "MyVPCIG": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  "MyVPCIG",
                  {
                    "Fn::Select": [
                      "2",
                      {
                        "Fn::Split": [
                          "/",
                          { "Ref": "AWS::StackId" }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          }
        ]
      }
    },
    "AttachIG": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "MyVPC" },
        "InternetGatewayId": { "Ref": "MyVPCIG" }
      }
    },
    "Pub1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Pub1" },
        "RouteTableId": { "Ref": "PubRT" }
      }
    },
    "Pub2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Pub2" },
        "RouteTableId": { "Ref": "PubRT" }
      }
    },
    "Pri1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Pri1" },
        "RouteTableId": { "Ref": "PriRT" }
      }
    },
    "Pri2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "Pri2" },
        "RouteTableId": { "Ref": "PriRT" }
      }
    },
    "DevMachineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM",
          "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess",
          "arn:aws:iam::aws:policy/AmazonECS_FullAccess"
        ],
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "DevMachineRole",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      { "Ref": "AWS::StackId" }
                    ]
                  }
                ]
              }
            ]
          ]
        }
      }
    },
    "ECSInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
        ],
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "ECSInstanceRole",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      { "Ref": "AWS::StackId" }
                    ]
                  }
                ]
              }
            ]
          ]
        }
      }
    },
    "DevMachineIntanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [ { "Ref": "DevMachineRole" } ],
        "InstanceProfileName": {
          "Fn::Join": [
            "-",
            [
              "DevMachineRole",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      { "Ref": "AWS::StackId" }
                    ]
                  }
                ]
              }
            ]
          ]
        }
      }
    },
    "ECSInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [ { "Ref": "ECSInstanceRole" } ],
        "InstanceProfileName": {
          "Fn::Join": [
            "-",
            [
              "ECSInstanceRole",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      { "Ref": "AWS::StackId" }
                    ]
                  }
                ]
              }
            ]
          ]
        }
      }
    },
    "DevMachineSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": [
            "-",
            [
              "DevMachineSG",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      { "Ref": "AWS::StackId" }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "GroupDescription": "Security group for dev machine with RDP Access",
        "VpcId": { "Ref": "MyVPC" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "10.0.0.0/16",
            "Description": "Lab purpose only, we will be using DevMachine to do labs and debug"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 3389,
            "ToPort": 3389,
            "CidrIp": "0.0.0.0/0"
          },
		  {
            "IpProtocol": "tcp",
            "FromPort": 3389,
            "ToPort": 3389,
			"CidrIpv6":"::/0"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "ECSInstanceSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": [
            "-",
            [
              "ECSInstanceSG",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      { "Ref": "AWS::StackId" }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "GroupDescription": "Security group for lab ECS instance with RDP and http port Access",
        "VpcId": { "Ref": "MyVPC" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 0,
            "ToPort":65535,
            "SourceSecurityGroupId": { "Ref": "LoadBalancerSG" },
            "Description": "Traffic from load balancer"
          },
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "10.0.0.0/16",
            "Description": "Lab purpose only, we will be debuging ECS EC2 instances from MyVPC network"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "LoadBalancerSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": {
          "Fn::Join": [
            "-",
            [
              "LoadBalancerSG",
              {
                "Fn::Select": [
                  "2",
                  {
                    "Fn::Split": [
                      "/",
                      { "Ref": "AWS::StackId" }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "GroupDescription": "Security group for Load Balancer with http access",
        "VpcId": { "Ref": "MyVPC" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0",
            "Description": "Allowing http traffic to load balancer"
          },
		            {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
		    "CidrIpv6":"::/0",
            "Description": "Allowing http traffic to load balancer"
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  },
  "Outputs": {
    "VPCId": {
      "Description": "MyVPC",
      "Value": { "Ref": "MyVPC" }
    },
    "Subnet1": {
      "Description": "Public subnet 1 id",
      "Value": { "Ref": "Pub1" }
    },
    "Subnet2": {
      "Description": "Public subnet 2 id",
      "Value": { "Ref": "Pub2" }
    },
    "DevIAMRole": {
      "Description": "DevMachine IAM role",
      "Value": { "Ref": "DevMachineRole" }
    }
  }

}
